pipeline {
    agent any
    stages {
      

        stage('Run Tests') {
            steps {
                script {
                    // Adapte o caminho do script conforme necess√°rio
                    sh 'chmod +x  ./teste.sh '
                    sh './teste.sh'
                }
            }
        }





      stage('Sonarqube validation'){
         steps{
            script {
                 scannerHome = tool 'sonar-scanner';
              }
            withSonarQubeEnv('sonar-server'){
                 sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=tasks -Dsonar.sources=. -Dsonar.host.url=${env.SONAR_HOST_URL} -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
            }
       }

}
    stage('Quality Gate'){
        steps{
            withForQualityGate abortPipeline: false
        }
    }
 


    }
}
